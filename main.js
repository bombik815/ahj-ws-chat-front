(()=>{"use strict";class e{constructor(e,t){this.server=e,this.ws=t,this.container=document.querySelector("#container"),this.nickname=document.querySelector(".nickname"),this.chat=document.querySelector(".chat"),this.inputNickname=document.querySelector(".input-nickname"),this.btnNickname=document.querySelector(".btn-nickname"),this.nicknamesInChat=document.querySelector(".nicknames-in-chat"),this.inputMessage=document.querySelector(".input-chat-message"),this.chatMessage=document.querySelector(".chat-message"),this.usedNickname=document.querySelector(".used-nickname"),this.btnUsedNickname=document.querySelector(".btn-used-nickname"),this.closeChat=document.querySelector(".close-chat"),this.users=null,this.inputNameText=null,this.inputTextMessage=null,this.messageTime=null,this.id=null}events(){this.inputName(),this.keyNameEnter(),this.btnNameClick(),this.inputText(),this.btnUsedNameCloseClick(),this.inputMessageToChat(),this.webSocket(),this.close(),window.onbeforeunload=()=>this.outBrowser()}outBrowser(){this.server.remove(this.id),this.ws.send(JSON.stringify({nickname:this.inputNameText,id:this.id,status:"remove"}))}webSocket(){this.ws.addEventListener("open",(()=>{const e=JSON.stringify(this.id);this.ws.send(e)})),this.ws.addEventListener("message",(e=>{const t=JSON.parse(e.data);null!==t&&null!==this.users&&(this.users.forEach((e=>{e.id===t.id&&this.id!==t.id&&t.text&&this.addMessages(t.text,e.nickname)})),null!==t.status&&"add"===t.status&&t.nickname!==this.inputNameText?this.addUser(t):"remove"===t.status&&this.removeUser(t))})),this.ws.addEventListener("close",(e=>{console.log("connection closed",e)})),this.ws.addEventListener("error",(()=>{console.log("error web socket")}))}inputName(){this.inputNickname.addEventListener("input",(e=>{this.inputNameText=e.target.value}))}inputText(){this.inputMessage.addEventListener("input",(e=>{this.inputTextMessage=e.target.value}))}inputMessageToChat(){this.inputMessage.addEventListener("keyup",(e=>{"Enter"===e.key&&(this.addMessages(this.inputTextMessage),this.sendMessage(this.inputTextMessage),this.inputTextMessage=null,this.inputMessage.value=null,this.inputMessage.blur())}))}addMessages(t,s="You"){if(t&&""!==t){const n=document.createElement("span"),i=document.createElement("h6"),a=document.createElement("p");i.textContent=`${s}, ${e.messageDate()}`,a.textContent=t,n.appendChild(i),n.appendChild(a),"You"===s&&(i.style.color="red",n.classList.add("message")),this.chatMessage.appendChild(n),this.chatMessage.scrollTop=this.chatMessage.scrollHeight}}sendMessage(e){const t={id:this.id,text:e.trim()};this.ws.send(JSON.stringify(t))}static messageDate(){const e=(new Date).getFullYear();let t=(new Date).getMonth()+1,s=(new Date).getDate(),n=(new Date).getHours(),i=(new Date).getMinutes();return 1===String(t).length&&(t=`0${t}`),1===String(s).length&&(s=`0${s}`),1===String(i).length&&(i=`0${i}`),1===String(n).length&&(n=`0${n}`),`${n}:${i} ${s}.${t}.${String(e).slice(2)}`}async connectToChat(e){null!==e&&("ошибка"!==await this.server.add(e)?(this.users=await this.server.load(),this.users.forEach((t=>{t.nickname===e&&(this.id=t.id,this.ws.send(JSON.stringify({nickname:e,id:this.id,status:"add"})))})),this.renderChat(this.users)):(this.nickname.classList.add("none"),this.usedNickname.classList.remove("none"),this.inputNameText=null,this.inputNickname.value=null))}renderChat(e){this.nickname.classList.add("none"),this.chat.classList.remove("none"),this.inputNickname.value=null,e.forEach((e=>{const t=document.createElement("span"),s=document.createElement("img"),n=document.createElement("p");e.nickname===this.inputNameText?(n.textContent="You",n.style.color="red"):n.textContent=e.nickname,t.appendChild(s),t.appendChild(n),this.nicknamesInChat.appendChild(t)}))}async addUser(e){this.users=await this.server.load();const t=document.createElement("span"),s=document.createElement("img"),n=document.createElement("p");n.textContent=e.nickname,t.appendChild(s),t.appendChild(n),this.nicknamesInChat.insertBefore(t,this.nicknamesInChat.children[this.nicknamesInChat.children.length-1])}async removeUser(e){this.users=await this.server.load();for(const t of this.nicknamesInChat.children)t.querySelector("p").textContent===e.nickname&&t.remove()}closeChatRoom(){this.nickname.classList.remove("none"),this.chat.classList.add("none"),this.server.remove(this.id),this.ws.send(JSON.stringify({nickname:this.inputNameText,id:this.id,status:"remove"})),this.nicknamesInChat.textContent=null,this.chatMessage.textContent=null,this.inputNameText=null,this.id=null,this.users=null}btnNameClick(){this.btnNickname.addEventListener("click",(()=>{this.connectToChat(this.inputNameText)}))}keyNameEnter(){this.inputNickname.addEventListener("keyup",(e=>{"Enter"===e.key&&this.connectToChat(this.inputNameText)}))}btnUsedNameCloseClick(){this.btnUsedNickname.addEventListener("click",(()=>{this.nickname.classList.remove("none"),this.usedNickname.classList.add("none")}))}close(){this.closeChat.addEventListener("click",(()=>{this.closeChatRoom()}))}}console.log("app started");const t=new WebSocket("wss://ahj-ws-chat-server.herokuapp.com/ws"),s=new class{constructor(){this.url="https://ahj-ws-chat-server.herokuapp.com/users"}async add(e){const t=await fetch(this.url,{body:e,method:"POST"});return await t.text()}async load(){const e=await fetch(this.url);return await e.json()}async remove(e){const t=await fetch(`${this.url}/${e}`,{method:"DELETE"});return await t.text()}};new e(s,t).events()})();